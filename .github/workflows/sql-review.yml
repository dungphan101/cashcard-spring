name: SQL Review Policy on Staging, UAT, and Production

on:
  push:
    branches:
      - staging
      - staging-*
      - uat
      - uat-*
    paths:
      - "../src/main/resources/db/migration/**.sql"
  pull_request:
    branches:
      - staging
      - staging-*
      - uat
      - uat-*
    paths:
      - "../src/main/resources/db/migration/**.sql"

jobs:
  check-release-on-staging:
    permissions:
      pull-requests: write # write permission required to allow the action writes the check results to the comment.
    runs-on: ubuntu-latest # use self-hosted machines if your Bytebase runs in internal networks.
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # set GITHUB_TOKEN because the 'Check release' step needs it to comment the pull request with check results.
      BYTEBASE_URL: https://miserably-fancy-ostrich.ngrok-free.app
      BYTEBASE_SERVICE_ACCOUNT: cashcard-app@service.bytebase.com
      BYTEBASE_PROJECT: "projects/project-cash-card"
      BYTEBASE_TARGETS: "instances/mysql-staging-instance/databases/cashcard"
      FILE_PATTERN: "../src/main/resources/db/migration/**.sql"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Bytebase
        id: login
        uses: bytebase/login-action@v1
        with:
          bytebase-url: ${{ env.BYTEBASE_URL }}
          service-key: ${{ env.BYTEBASE_SERVICE_ACCOUNT }}
          service-secret: ${{secrets.BYTEBASE_SERVICE_ACCOUNT_SECRET}} # Please use secrets for sensitive data in production.
      - name: Check release
        uses: bytebase/create-release-action@v1
        with:
          url: ${{ env.BYTEBASE_URL }}
          token: ${{ steps.login.outputs.token }}
          file-pattern: ${{ env.FILE_PATTERN }}
          # fail the action if release checks report any error.
          check-release: "FAIL_ON_ERROR"
          project: ${{ env.BYTEBASE_PROJECT }}
          targets: ${{ env.BYTEBASE_TARGETS }}
          validate-only: true


  check-release-on-uat:
    permissions:
      pull-requests: write # write permission required to allow the action writes the check results to the comment.
    runs-on: ubuntu-latest # use self-hosted machines if your Bytebase runs in internal networks.
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # set GITHUB_TOKEN because the 'Check release' step needs it to comment the pull request with check results.
      BYTEBASE_URL: https://miserably-fancy-ostrich.ngrok-free.app
      BYTEBASE_SERVICE_ACCOUNT: cashcard-app@service.bytebase.com
      BYTEBASE_PROJECT: "projects/project-cash-card"
      BYTEBASE_TARGETS: "instances/mysql-uat-instance/databases/cashcard"
      FILE_PATTERN: "../src/main/resources/db/migration/**.sql"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Bytebase
        id: login
        uses: bytebase/login-action@v1
        with:
          bytebase-url: ${{ env.BYTEBASE_URL }}
          service-key: ${{ env.BYTEBASE_SERVICE_ACCOUNT }}
          service-secret: ${{secrets.BYTEBASE_SERVICE_ACCOUNT_SECRET}} # Please use secrets for sensitive data in production.
      - name: Check release
        uses: bytebase/create-release-action@v1
        with:
          url: ${{ env.BYTEBASE_URL }}
          token: ${{ steps.login.outputs.token }}
          file-pattern: ${{ env.FILE_PATTERN }}
          # fail the action if release checks report any error.
          check-release: "FAIL_ON_ERROR"
          project: ${{ env.BYTEBASE_PROJECT }}
          targets: ${{ env.BYTEBASE_TARGETS }}
          validate-only: true

  check-release-on-prod:
    permissions:
      pull-requests: write # write permission required to allow the action writes the check results to the comment.
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # set GITHUB_TOKEN because the 'Check release' step needs it to comment the pull request with check results.
      BYTEBASE_URL: https://miserably-fancy-ostrich.ngrok-free.app
      BYTEBASE_SERVICE_ACCOUNT: cashcard-app@service.bytebase.com
      BYTEBASE_PROJECT: "projects/project-cash-card"
      BYTEBASE_TARGETS: "instances/mysql-production-instance/databases/cashcard"
      FILE_PATTERN: "../src/main/resources/db/migration/**.sql"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Bytebase
        id: login
        uses: bytebase/login-action@v1
        with:
          bytebase-url: ${{ env.BYTEBASE_URL }}
          service-key: ${{ env.BYTEBASE_SERVICE_ACCOUNT }}
          service-secret: ${{secrets.BYTEBASE_SERVICE_ACCOUNT_SECRET}} # Please use secrets for sensitive data in production.
      - name: Check release
        uses: bytebase/create-release-action@v1
        with:
          url: ${{ env.BYTEBASE_URL }}
          token: ${{ steps.login.outputs.token }}
          file-pattern: ${{ env.FILE_PATTERN }}
          # fail the action if release checks report any error.
          check-release: "FAIL_ON_ERROR"
          project: ${{ env.BYTEBASE_PROJECT }}
          targets: ${{ env.BYTEBASE_TARGETS }}
          validate-only: true
